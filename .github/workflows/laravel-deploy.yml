name: Deploy Laravel Weather API

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, curl, sqlite3
        coverage: none
    
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Copy .env.example
      run: cp .env.example .env
    
    - name: Generate application key
      run: php artisan key:generate
    
    - name: Create database
      run: |
        touch database/database.sqlite
        php artisan migrate --force
    
    - name: Execute tests
      run: php artisan test

  deploy:
    name: Deploy to Production
    needs: tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, curl
    
    - name: Install dependencies
      run: composer install --no-dev --prefer-dist --no-progress
    
    # Using SSH deploy key to deploy to server
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add host key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
    
    - name: Deploy to production
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PATH: ${{ secrets.SERVER_PATH }}
      run: |
        # Build and optimize for production
        php artisan config:clear
        php artisan route:clear
        php artisan cache:clear
        php artisan config:cache
        php artisan route:cache
        
        # Deploy using rsync
        rsync -avz --delete \
          --exclude='.git/' \
          --exclude='.github/' \
          --exclude='.env' \
          --exclude='node_modules/' \
          --exclude='tests/' \
          --exclude='storage/logs/*' \
          --exclude='storage/framework/cache/*' \
          --exclude='storage/framework/sessions/*' \
          --exclude='storage/framework/views/*' \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_PATH }}
        
        # Run post-deployment commands
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd ${{ secrets.SERVER_PATH }} && \
          php artisan migrate --force && \
          php artisan config:cache && \
          php artisan route:cache && \
          php artisan view:cache && \
          chmod -R 775 storage bootstrap/cache"